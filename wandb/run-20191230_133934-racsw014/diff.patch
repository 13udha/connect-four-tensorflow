diff --git a/c4env.py b/c4env.py
index 895302b..26c9f59 100644
--- a/c4env.py
+++ b/c4env.py
@@ -16,7 +16,7 @@ class C4Env(gym.Env):
     """Custom Environment that follows gym interface"""
     metadata = {'render.modes': ['human']}
 
-    def __init__(self,board_width=4,board_height=4): # should be 7 , 6
+    def __init__(self,board_width=7,board_height=6):
         super(C4Env, self).__init__()
         self.board_width = board_width
         self.board_height = board_height
diff --git a/c4rl.py b/c4rl.py
index d297f8d..17d9ec5 100644
--- a/c4rl.py
+++ b/c4rl.py
@@ -72,7 +72,7 @@ except OSError:
 # slows down training quite a lot. You can always safely abort the training prematurely using
 # Ctrl + C.
 #dqn.fit(env, nb_steps=5000000, visualize=False, verbose=2)
-sarsa.fit(env, nb_steps=50000, visualize=False, verbose=2, callbacks=[WandbCallback()])
+sarsa.fit(env, nb_steps=50000, visualize=False, verbose=1, callbacks=[WandbCallback()])
 
 # After training is done, we save the final weights.
 #dqn.save_weights('dqn_{}_weights.h5f'.format(ENV_NAME), overwrite=True)
diff --git a/randomenv.py b/randomenv.py
index 8bfb672..d98c874 100644
--- a/randomenv.py
+++ b/randomenv.py
@@ -20,7 +20,10 @@ class RandomEnv(C4Env):
             self.game.play(self.game.random_action(), self.game.current_player) 
             self.game.get_status()
         self.steps += 1
-        reward = float(-self.game.winner) / self.steps 
+
+        reward =self.boardchecker()
+
+        #reward = float(-self.game.winner) / self.steps 
 
         done = self.game.get_status()
         if(done):
@@ -37,4 +40,8 @@ class RandomEnv(C4Env):
         self.steps = 0
         if (self.game.current_player==1): # so ist immer der RL Agent als erstes im step dran und kann keinen illegalen zug machen wenn er als action das selbe feld w√§hlt wie der Gegner
             self.game.play(self.game.random_action(), self.game.current_player) 
-        return np.array(self.game.board)
\ No newline at end of file
+        return np.array(self.game.board)
+
+    def boardchecker(self):
+        #Anzahl der 2er,3er und 4er Ketten der Spieler werden verrechnet
+        return (self.game.check_for_streak(-1,2) + (self.game.check_for_streak(-1,3)*10)+ (self.game.check_for_streak(-1,4)*1000))-(self.game.check_for_streak(1,2) + (self.game.check_for_streak(1,3)*10)+ (self.game.check_for_streak(1,4)*1000))
\ No newline at end of file
diff --git a/results/dqn_weights.h5f b/results/dqn_weights.h5f
index eb75ba0..f635eb2 100644
Binary files a/results/dqn_weights.h5f and b/results/dqn_weights.h5f differ
